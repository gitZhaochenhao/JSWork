1、响应式的概念
	在不同的设备（不同的显示屏大小、分辨率）上，同一个网页根据设备特性呈现不同的布局样式。
	bootstrap网页响应式查看
	响应式要做的事情：
		1、我们必须有一个参照（width）
		2、根据这个宽度把屏幕分成几个区域         768px       1024px      
		3、根据我们分成的区域，分别写出对应的结构和样式
		
2、媒体查询
	现在的网页就是一个盒子，我们要对这个盒子进行响应式操作，媒体查询让盒子变色；
	
		

3、注意点
	临界值的判定（无论是min还是max都会包含width的临界值，下面会覆盖上面）
	正常的样式必须写在媒体查询之前    （如果写在媒体查询之后，那么媒体查询相当于没写，也会有覆盖操作）
	媒体查询是c3的东西，要处理兼容性问题  （目的不报错，让老旧的浏览器碰到媒体查询不至于报错 only）



4、其它媒体类型和属性（了解）


5、css2媒体选择器（link当中的一个属性）
	起始时候其实没有媒体查询，而是提出的媒体选择器，在css3当中进行了大部分的完善



6、less编写媒体查询
	直接在花括号内写媒体选择器就可以。
	

7、2X和3X图在媒体查询当中的使用（针对的其实是媒体选择dpr时候使用，多用于移动端）
	带宽问题和显示问题

	位图像素：（这个像素值和物理像素对应起来  图片才会完美显示）
	
	pc        15 * 15   div      15 * 15的背景图片显示是最完美的

	移动端 	  15 * 15   div    移动端要看dpr是多少   假设dpr = 2;     盒子物理30 * 30     30 * 30的图片才会完美显示   2X图
		                                                   3；            45 * 45     45 * 45                     3Xt图


8、小页面头部响应式练习
	注意操作多个元素的时候，临界值的判定






9、bootstarp的简介（思想框架和应用框架，官网简介）
   应用框架

   MVC
   MVVM

   类
   ui库
   

10、起步 cdn  模板演示  导入本地文件（注意查看全局样式） css初始化
	
	模板怎么用（怎么导入自己的bootstrap）
	全部的盒子都是怪异盒子


11、流体容器和固定容器（查看各自的宽度和屏幕分界）
	各种容器的样式

	流体：  .container-fixed
		宽度相当于是设置的 100%  默认就是视口的宽度
		padding-right: 15px;
    		padding-left: 15px;
   		margin-right: auto;
    		margin-left: auto

	固定：  .container
		宽度根据屏幕浏览器的宽度不同而不同
		padding-right: 15px;
    		padding-left: 15px;
   		margin-right: auto;
    		margin-left: auto;


		    
		屏幕浏览器的宽度       768     992    1200 

		固定容器真正的宽度    （屏幕小于768）   100%     
				      （屏幕768  992）  750px
				       (屏幕992  1200)  970px
				       (屏幕大于1200)   1170px 

		
		

12、栅格系统（对应官网去设置，对应表格）
	容器
	行      样式   （每一行都分成12份）
		    设置负的margin值与container的padding值抵消掉
		    margin-right: -15px;
    		    margin-left: -15px;



	列	样式   （每一个列都能去设置占一行的几份）
		     列不设置任何的类，就不叫列，那么row当中的盒子全部会堆叠在一起，只有设置了响应的类才叫列，才会水平排列
			
                        所有列的类都会有float:left
		
		        position: relative;
    			min-height: 1px;
    			padding-right: 15px;
    			padding-left: 15px;

	
	
	设置列在某一类屏幕的占比
		当列的总和大于12份会换行
		
	
	设置列在不同屏幕响应式的占比
		
	
	响应式列重叠

	
13、列偏移和列排序  margin 和 position

14、响应式工具  可以决定谁隐藏谁显示

15、缩略图、

16、栅格容器源码分析

17、栅格行和列的分析

18、抽离自己的栅格系统（自定义）
	分析源码完成后
	需要修改的部分
		// 行设置的清除浮动需要修改
			.make-row(@gutter: @grid-gutter-width) {
			 	 margin-left:  ceil((@gutter / -2));
				  margin-right: floor((@gutter / -2));
				  .clearfix()
				}

			.clearfix() {
 			  &:before,
 		          &:after {
    			   content: " "; 
    			   display: table; // 2
 			  }

 			  &:after {
  			  clear: both;
 			  }
			}
		//自定义的index.less文件当中需要导入使用的less
			*{

				margin:0
				padding:0
				box-sizing:border-box;
			}


19、bootstrap 完成案例


20、MUI的使用（参考官网）

21、MUI布局案例




	




