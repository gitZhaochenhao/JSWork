适配和移动端准备工作

前一天的知识：
	回顾：屏幕相关的知识
	      物理像素   css像素   设备独立像素  dpr
	      在理想状态下他们三者的关系（普通屏、高清屏）
			普通屏   1   1   1
			高清屏   dpr (window.dpr)    2     2  1  1     width
						     3     3  1  1     

	      iphone6在理想状态下三种像素描述它的宽度分别是多少
			750   375   375


	      三种视口
	      pc端用户缩放
	      移动端用户缩放和系统缩放
	      最终我们要的meta标签的写法

1、为什么要做适配
	因为同样的一个元素，在一个设备上和另外一个设备上显示的布局不同。也就是比例不一样。导致不同设备显示不成等比
	想想为什么不成等比？

	375/980
	
	width = device-width   布局视口根据设备不同 设置的宽度不同
	375px  又是一个固定的绝对的单位



2、px em rem %单位的区别
	px     px是所有单位的祖宗   而且px是一个绝对的单位 
	%      是一个相对的单位，宽高在设置的时候相对的是父级元素。所以元素如果不多，可以使用；
	em     是一个相对的单位，单位相对的是自身的字体大小   1em = 自身的自己大小；
	rem    也是一个相对的单位，相对的永远是根元素html的字体大小。默认情况下  1rem = 16px；
	 
3、rem适配（操作行内样式和操作文档内嵌样式）
	rem适配方式： 我们可以动态的把屏幕的宽度设置为根元素字体大小；	
		那么在不同的设备上，我们相当于拿到不同设备的宽度设置为html根元素的字体大小。也就是说在不同设备上都有这样的一个关系			1rem = 设备的宽度
4、自调函数封装
	自调函数：通常用在初始化，并且函数只执行一次的时候。习惯性在前面加！

5、什么时候用rem适配
	1、首先我们的设计图稿大于屏幕宽度   此时我们就要立马想到rem适配
	2、在设计图稿上元素狠多
	优点：  优点是可以使用meta完整的标签属性  
	缺点：  计算比较复杂；   less  
 
6、viewport适配是什么，目的是什么
	目的是将我们的屏幕视口的宽度调整到和图稿宽度一致	
7、什么时候要用到viewport适配
	首先我们的设计图稿小于屏幕宽度   此时我们就要立马想到viewport适配，其实就是meta标签当中的initial-scale值要改变，让视口宽度和
	图纸宽度一致；

	优点：不用复杂的计算，直接使用图稿上标注的px值 
	缺点：不能使用完整的meta标签，并且常会出现图片失真；
8、viewport适配
	300图稿
	375
	计算initial-scale的值为多少，我们可以让屏幕宽度（布局视口）从375 变为 300
	
9、1物理像素适配（其实就是rem适配和viewport适配的结合）
	 
	布局视口和css面积的放大和缩小是相反的；  initial-scale的值，控制的就是css面积的放大或者缩小
	目的：为了得到一个1物理像素的边框而出现的



10、做法：盒子宽高使用rem 边框使用px 先根据dpr进行系统缩小相应倍数，再让rem进行反向放大相应倍数。



11、pc和移动端基础事件（dom0和dom2选用哪个）
12、阻止浏览器默认行为 （很多个盒子，我再点击的时候都不想出现系统默认的东西）
13、练习有个爹和儿子  点击爹不想要系统行为  而点击儿子需要系统默认行为
14、pc端点击时候鼠标的位置怎么获取
15、手指列表伪数组（移动端如何获取手指事件的位置）
	changedTouches	   目标元素目标事件上的手指列表	   最终我们选择手指列表要的changedTouches
	targetTouches	   目标元素上的手指列表	
	touches            屏幕上的手指列表
16、点透（穿透）事件处理两大步
17、移动端准备7项工作


http://www.atguigu.com/












