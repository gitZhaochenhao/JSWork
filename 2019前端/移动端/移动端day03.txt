
前一天知识回顾：
	移动端准备工作7项任务？
		rem     
		viewport      300    375/300
		1px     dpr
	移动端获取手指位置
		事件 pc   	mousedown    mousemove  mouseup      dom0
		     移动端     touchstart   touchmove  touchend     dom2
		     阻止浏览器默认行为和阻止事件冒泡
		     a标签的点透处理    1阻止浏览器默认行为   2分别对所有的a手动添加事件，发生事件的时候更改浏览器的跳转地址
		     
		     鼠标以及手指的位置      event.clientX   event.clientY

					     changedTouches   目标元素目标事件 
						event.changedTouches[0].clientX
						var touch = event.changedTouches[0];
					     targetTouches    目标元素上的
					     touches          屏幕上的
					     				

1、滑屏基础（结构  样式  行为  原理  使用定位和使用2d变换）
	对于手指滑屏一轮：  start事件只执行一次    move事件执行n次(具体次数，需要浏览器捕获)   end事件也是执行1次
	
	对于滑屏的结构来说：永远都是小盒子里面有一个大盒子；

	原理：元素在一轮滑屏的过程当中      最终位置  =  元素的初始位置   +   手指的距离差；
	
	在start事件当中，我们可以获取到元素的初始位置 及 手指的初始位置
	在move事件当中，我们可以获取到手指的最终位置   也就拿到手指的距离差  然后在move事件当中拿到元素的最终位置，设置top值；
	在end事件当中，如果没有滑屏的其它逻辑，end可以不写。end当中也可以获取i到手指的位置，这个位置和move当中结束的位置是相同的。
	end当中也可以获取元素的位置，元素的位置是move事件设置后的位置。
	


2、pc端拖拽和移动端滑屏的不同点
	移动端move事件发生后会覆盖start事件
	移动端不需要在end事件当中去解绑move事件

3、move的事件本质（画图分析）
	

4、封装读取和设置transform函数

	1、transform这个属性去设置的时候覆盖操作
	2、transform这个属性在很多地方都要去操作，而js种操作这个属性比较麻烦
	3、在不同的文件当中，去拿元素的transform属性值，如果保存在全局变量当中，只有一个文件上可以获取到全局变量的值，而另外一个获取不到。

	函数封装好之后需要有的功能：
		①、设置某个元素的变换值，但是不会发生全部覆盖
		②、读取某个元素的变换值，如果没有默认填充初始值

	




