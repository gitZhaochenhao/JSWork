
							是什么  为什么  怎么做！

1、屏幕尺寸
	对角线的长度   英寸表示    1英寸 ≈ 2.54cm
		
2、屏幕分辨率（iphone6  750*1334）
	横纵向上像素点数（物理像素点）

3、屏幕像素密度
	单位英寸上所包含的物理像素点数
	这个值求法： 与屏幕尺寸和屏幕分辨率关系密切      
	通过分辨率和勾股定理可以求出对角线上总的像素点数
	


4、物理像素 （物理硬件描述） 
 
5、css像素 （用户描述）
	
	抽象的   用来精确的度量web页面的尺寸大小的   给web开发人员使用
	通常我们在css以及js当中所使用的都是css像素；

6、设备独立像素   （计算机系统描述，包含css像素）
	设备独立像素是为了让物理像素更好的展现用户层的像素而出现的，是为了转化；
	在某些特定的特定的条件下，css像素可以  =  设备独立像素；
	也是抽象的虚拟像素

iphone6   用物理像素去描述      750 
	  用设备独立像素描述    375 



  
7、像素比（dpr）
	物理像素和设备独立像素之间的比例；（可以让设备独立像素和物理像素拉关系）
	
	在没有任何的缩放情况下（完美）  设备的独立像素  ==   css像素的
	
   
普通屏： 不考虑任何的缩放      1css像素  = 1物理像素  = 1设备独立像素
高清屏dpr = 2：                1          2 	       1
      dpr = 3                  1          3            1


8、思考：
	在不考虑任何缩放的前提下：（前提是它）
		物理像素和css像素的关系是什么？
			要根据dpr去计算

		css像素和设备独立像素的关系是什么？
			css像素  =  设备独立像素  

   	
9、最终屏幕宽度在理想完美状态用各种像素的描述各是多少？

	物理像素      750px
	设备独立像素  375px
	css像素       375px




10、pc视口
11、布局视口
	为了转移pc的网页，而引入的一个容器。它的大小是要远大于设备独立像素，各个设备差异不大。（980）
	为了把这个布局视口当中的元素全部展现给客户，并且不能出现横向滚动条。浏览器厂商会自作主张把布局视口，进行压缩（压缩的是css面积）
	最终：我们的手机宽度此时用三种像素描述就变为了：
		
	物理像素     750
	设备独立像素 375
	css像素      980	

	
12、视觉视口
	宽度永远是屏幕宽度所包含的css像素值，是变化的
	
13、理想视口
	meta  name = "viewport"  content = "width=device-width"
	最终达到的目标    布局适口  = 视觉视口  = 理想视口 = 设备独立像素 = 375

14、meta笔记




15、pc缩放
	布局
		布局发生改变，因为初始包含块在发生改变
		
	元素  
		元素的css像素值不会发生改变，但是CSS的面积发生改变

	元素所占的物理像素
		因为元素的面积变大，所以元素占据的物理像素点变多

16、移动端的用户缩放（草料使用）


17、放大有什么变化
	布局   				不变    布局视口大小不会发生改变
	元素   				面积变大   css像素值不变
	元素占用物理像素   		变多
	视觉视口			变小
	视觉视口种的元素个数		变少
18、缩小有什么变化
	布局   				不变    布局视口大小不会发生改变
	元素   				面积变小   css像素值不变
	元素占用物理像素   		变少
	视觉视口			变大
	视觉视口种的元素个数		变多

19、缩放笔记（画图搞清楚）

20、meta解决大元素兼容性问题
	meta标签同时协商  width = device-width 和   initial-scale=1.0
	
21、只设置initial-scale和只设置width效果一样

22、系统缩放有什么不同（会让布局视口根据视觉视口改变而改变）
	会让布局视口根据视觉视口改变而改变
	我们在考虑的时候，先根据用户的缩放去考虑，然后最后在基础上加上视觉视口的改变就ok；

23、同时initial-scale和width听谁的
	如果同时设置，最终谁让我的布局视口更大，就听谁的；

24、最终我们以后用的meta标签要如何写
	******<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=no" />
25、meta元素设置的所有属性






